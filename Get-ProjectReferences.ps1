param (
    [string]$ProjectDir = $null
)

$OriginalDir = $(Get-Location)

# Se o diret√≥rio do projeto foi informado, muda para ele
if ($ProjectDir) {
    Set-Location -Path $ProjectDir
}

function Get-ProjectReferences {
    param (
        [string]$ProjectDir = $null,
        [System.Collections.Generic.List[System.String]]$VisitedPaths,
        [System.Collections.Generic.List[System.String]]$UniqueDependencies
    )
    
    # Inicializa o diret√≥rio de projeto se necess√°rio
    if (-not $ProjectDir) {
        Write-Host "Usando diret√≥rio atual como projeto"
        $ProjectDir = $(Get-Location)
    }

    # Lista refer√™ncias do projeto
    $references = dotnet list $ProjectDir reference | Select-String "\.csproj" | ForEach-Object { $_.Line.Trim() }

    # Resolve os caminhos absolutos das refer√™ncias
    foreach ($ref in $references) {
        # Resolve o caminho absoluto, tratando refer√™ncias relativas como ..\..
        $ResolvedPath = Resolve-Path (Join-Path $ProjectDir $ref)

        # Extrai o diret√≥rio do caminho, removendo o arquivo .csproj
        $FolderPath = Split-Path $ResolvedPath.Path -Parent

        # Verifica se o diret√≥rio j√° foi visitado
        if (-not $VisitedPaths.Contains($FolderPath)) {
            # Marca o diret√≥rio como visitado
            $VisitedPaths.Add($FolderPath)

            # Adiciona a depend√™ncia √† lista √∫nica
            if (-not $UniqueDependencies.Contains($FolderPath)) {
                $UniqueDependencies.Add($FolderPath)
            }

            # Imprime o diret√≥rio
            Write-Host "  üìÇ Visitando: $FolderPath"

            # Faz o 'cd' para o diret√≥rio
            Set-Location -Path $FolderPath

            # Chama a fun√ß√£o recursivamente para o diret√≥rio atual
            Get-ProjectReferences -ProjectDir $FolderPath -VisitedPaths $VisitedPaths -UniqueDependencies $UniqueDependencies

            # Retorna para o diret√≥rio anterior
            Set-Location -Path $ProjectDir
        } else {
            Write-Host "  üîÅ J√° visitado: $FolderPath"
        }
    }
}

# Inicializa a lista de depend√™ncias e de caminhos visitados fora da fun√ß√£o
$VisitedPaths = New-Object 'System.Collections.Generic.List[System.String]'
$UniqueDependencies = New-Object 'System.Collections.Generic.List[System.String]'

# Chama a fun√ß√£o no in√≠cio da execu√ß√£o do script
Get-ProjectReferences -ProjectDir $ProjectDir -VisitedPaths $VisitedPaths -UniqueDependencies $UniqueDependencies

# Retorna para o diret√≥rio original
Set-Location -Path $OriginalDir

# Ap√≥s a execu√ß√£o completa da recurs√£o, imprime as depend√™ncias √∫nicas
Write-Host "`nDepend√™ncias √∫nicas:"
$UniqueDependencies | ForEach-Object { Write-Host "  $_" }
